{"version":3,"sources":["animation.js"],"names":["DBSNAV","UTILS","throttle","fn","wait","time","Date","now","detectIE","ua","window","navigator","userAgent","msie","indexOf","parseInt","substring","trident","rv","edge","Page","Meta","Init","$el","console","log","ID","find","data","Sections","_sections","updateScrollPos","update","section","$","map","e","$e","pos","position","top","bottom","outerHeight","hash","newTop","document","scrollTop","currentMiddle","innerHeight","step","middle","count","length","p","undefined","$section","path_progress_to","Animation","scrolledToProgess","Start","removeClass","enabled","svgs","currentProgress","isAnimating","$scope","_animation","Snap","RouteLine","div","started","done","load","config","siteRoot","f","g","selectAll","append","svg_el","MainRoute","select","Arrow","ArrowPath","svg_attr","main_line_reset","strokeDashoffset","getTotalLength","strokeDasharray","main_line","png","after","Reset","attr","opacity","animate","value","animate_to","ArrowPathLen","duration","segment_duration","AnimationDone","v","movePoint","getPointAtLength","transform","x","y","alpha","CheckProgress"],"mappings":"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","file":"animation.js","sourcesContent":["var DBSNAV = DBSNAV || {};\r\n\r\nDBSNAV.UTILS = {\r\n  throttle: function(fn, wait) {\r\n    var time = Date.now();\r\n\r\n    return function() {\r\n      if ((time + wait - Date.now()) < 0) {\r\n        fn();\r\n        time = Date.now();\r\n      }\r\n    }\r\n  },\r\n  detectIE: function() {\r\n    /**\r\n     * detect IE\r\n     * returns version of IE or false, if browser is not Internet Explorer\r\n     */\r\n\r\n    var ua = window.navigator.userAgent;\r\n  \r\n    // Test values; Uncomment to check result â€¦\r\n  \r\n    // IE 10\r\n    // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\r\n    \r\n    // IE 11\r\n    // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\r\n    \r\n    // Edge 12 (Spartan)\r\n    // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\r\n    \r\n    // Edge 13\r\n    // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';\r\n  \r\n    var msie = ua.indexOf('MSIE ');\r\n    if (msie > 0) {\r\n      // IE 10 or older => return version number\r\n      return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n    }\r\n  \r\n    var trident = ua.indexOf('Trident/');\r\n    if (trident > 0) {\r\n      // IE 11 => return version number\r\n      var rv = ua.indexOf('rv:');\r\n      return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\r\n    }\r\n  \r\n    var edge = ua.indexOf('Edge/');\r\n    if (edge > 0) {\r\n      // Edge (IE 12+) => return version number\r\n      return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\r\n    }\r\n  \r\n    // other browser\r\n    return false;\r\n  }\r\n}\r\n\r\nDBSNAV.Page = function() {\r\n  this.Meta = {};\r\n\r\n  this.Init = function($el) {\r\n    console.log('init');\r\n    this.Meta.ID = $el.find('body').data('page');\r\n  };\r\n\r\n};\r\n\r\nDBSNAV.Sections = {\r\n  Init: function() {\r\n    var _sections = this;\r\n    _sections.updateScrollPos();\r\n    _sections.update();\r\n  },\r\n  update: function() {\r\n    var section = $.map($('.block-section'), function(e) {\r\n      var $e = $(e);\r\n      var pos = $e.position();\r\n\r\n      console.log(pos.top);\r\n\r\n      return {\r\n        $e: $e,\r\n        top: pos.top,\r\n        bottom: pos.top + $e.outerHeight(),\r\n        hash: $e.data('section-name')\r\n      };\r\n    });\r\n\r\n    this.section = section;\r\n  },\r\n  updateScrollPos: function() {\r\n    var _sections = this;\r\n    var newTop = $(document).scrollTop();\r\n    \r\n    _sections.scrollTop = newTop;\r\n    _sections.currentMiddle = newTop + (window.innerHeight / 2);\r\n  },\r\n  step: function(newTop) {\r\n    var middle = DBSNAV.Sections.currentMiddle;\r\n    var count = DBSNAV.Sections.section.length;\r\n    var p = null;\r\n\r\n    while (p = DBSNAV.Sections.section[--count]) {\r\n      if (p.top >= middle || p.bottom <= middle) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    \r\n    if(p === undefined) {\r\n      p = DBSNAV.Sections.section[0];\r\n    }\r\n\r\n    if (p) {\r\n\r\n      var $section = $('[data-section-name=\"' + p.hash + '\"]');\r\n      var path_progress_to = $section.data('path-progress');\r\n\r\n      // Get animation progress value for this section\r\n      if (path_progress_to > DBSNAV.Animation.scrolledToProgess) {\r\n        DBSNAV.Animation.scrolledToProgess = path_progress_to;\r\n      }\r\n\r\n      console.log(p.hash, ', path-progress:', path_progress_to);\r\n      // Trigger path animation\r\n      DBSNAV.Animation.Start(path_progress_to);\r\n\r\n      $section.find('.js-animated-item').removeClass('before-animate');\r\n\r\n    }\r\n  }\r\n}\r\n\r\nDBSNAV.Animation = {\r\n  enabled: !(DBSNAV.UTILS.detectIE()),\r\n  svgs: {},\r\n  scrolledToProgess: 0,\r\n  currentProgress: 0,\r\n  isAnimating: false,\r\n  Init: function($scope) {\r\n    var _animation = this;\r\n\r\n    if (_animation.enabled && typeof Snap != 'undefined') {\r\n      _animation.svgs = {\r\n        RouteLine: {\r\n          div: Snap(\"#svg-01\"),\r\n          started: false,\r\n          done: false\r\n        }\r\n      };\r\n\r\n      Snap.load(config.siteRoot + 'images/nav-journey-path.svg', function(f) {\r\n        var g = f.selectAll('#main-route');\r\n        _animation.svgs.RouteLine.div.append(g);\r\n\r\n        _animation.svg_el = {\r\n          MainRoute: _animation.svgs.RouteLine.div.select('#path'),\r\n          Arrow: _animation.svgs.RouteLine.div.select('#arrow'),\r\n          ArrowPath: _animation.svgs.RouteLine.div.select('#arrow-path')\r\n        };\r\n\r\n        _animation.svg_attr = {\r\n          main_line_reset: {\r\n            strokeDashoffset: _animation.svg_el.MainRoute.getTotalLength(),\r\n            strokeDasharray: _animation.svg_el.MainRoute.getTotalLength()\r\n          },\r\n          main_line: {\r\n            strokeDashoffset: 0\r\n          }\r\n        };\r\n        _animation.currentProgress = 0;\r\n      });\r\n    }\r\n    else {\r\n      \r\n      var png = $('#svg-01').data(\"png\");\r\n      $('#svg-01').after('<img src=\"' + png + '\" class=\"svg--route-main\">');\r\n\r\n      // $('#svg-01').after('<object data=\"'+png+'\" type=\"image/svg+xml\" class=\"svg--route-main\"></object>');\r\n    }\r\n\r\n    $scope.find('.js-animated-text').removeClass('before-animate');\r\n  },\r\n  Reset: function() {\r\n    var _animation = this;\r\n    var svg_el = _animation.svg_el;\r\n    var svg_attr = _animation.svg_attr;\r\n\r\n    svg_el.Arrow.attr({\r\n      opacity: '0'\r\n    });\r\n    _animation.svg_el.MainRoute.animate(svg_attr.main_line_reset, 0);\r\n    _animation.currentProgress = 0;\r\n    _animation.scrolledToProgess = 0;\r\n    _animation.isAnimating = false;\r\n\r\n  },\r\n  Start: function(value) {\r\n    var _animation = this;\r\n    var value = value;\r\n\r\n    var svg_el = _animation.svg_el;\r\n    var svg_attr = _animation.svg_attr;\r\n\r\n\r\n    var animate_to = function(value) {\r\n      var ArrowPathLen = svg_el.ArrowPath.getTotalLength();\r\n      var duration = 6000;\r\n      var segment_duration = (value - _animation.currentProgress) * duration;\r\n\r\n\r\n      console.log('animate_to (value) : ', value, 'current progress : ', _animation.currentProgress);\r\n\r\n\r\n      var attr = {\r\n        strokeDashoffset: ((1 - value) * ArrowPathLen)\r\n      };\r\n\r\n      // proceed if new value is greater than current progress\r\n      if (!(value < _animation.currentProgress)) {\r\n\r\n        _animation.isAnimating = true;\r\n        console.log('animating:', _animation.isAnimating);\r\n        // animate main line\r\n        if (svg_el.MainRoute) {\r\n          svg_el.MainRoute.animate(attr, segment_duration, _animation.AnimationDone);\r\n        }\r\n        svg_el.Arrow.attr({\r\n          opacity: '1'\r\n        });\r\n\r\n        // animate arrow along path\r\n        Snap.animate((_animation.currentProgress * ArrowPathLen), (value * ArrowPathLen), function(v) {\r\n          var movePoint = svg_el.ArrowPath.getPointAtLength(v);\r\n          svg_el.Arrow.transform('t' + parseInt(movePoint.x - 740) + ',' + parseInt(movePoint.y - 1840) + 'r' + (movePoint.alpha + 90));\r\n        }, segment_duration);\r\n\r\n        _animation.currentProgress = value;\r\n      }\r\n    };\r\n    // condition to animate: 1) not currently animating, 2) progress not completed yet\r\n    if (!(_animation.isAnimating) && _animation.currentProgress != 1 && _animation.enabled == true) {\r\n      animate_to(value);\r\n    }\r\n\r\n  },\r\n  CheckProgress: function() {\r\n\r\n    if (DBSNAV.Animation.scrolledToProgess > DBSNAV.Animation.currentProgress) {\r\n      DBSNAV.Animation.Start(DBSNAV.Animation.scrolledToProgess);\r\n    } else {\r\n      DBSNAV.Animation.isAnimating = false;\r\n    }\r\n\r\n  },\r\n  AnimationDone: function() {\r\n\r\n    DBSNAV.Animation.isAnimating = false;\r\n    console.log('animating:', DBSNAV.Animation.isAnimating);\r\n\r\n    DBSNAV.Animation.CheckProgress();\r\n  },\r\n}"]}